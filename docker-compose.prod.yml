services:


  #IMAGEN DE BASE DE DATOS PRODUCCION


  bdd-prod:
    image: mongo:7.0.16-jammy
    container_name: CASSINI01
    hostname: CASSINI01
    volumes:
      - data_prd:/data/db
      - ./init-mongo.prod.js:/docker-entrypoint-initdb.d/init-mongo.prod.js:ro
    networks:
      - net-prd
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=prd_${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASS}p
      - MONGO_INITDB_DATABASE=admin

  ################################################################################################
  
  #IMAGEN DE GESTOR BASE DE DATOS PRODUCCION

  dbexpress-prod:
    depends_on:
      - bdd-prod
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: DBEXPRESS01
    hostname: DBEXPRESS01
    ports:
      - "81:8081"
    networks:
      - net-prd
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=CASSINI01
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=prd_${DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASS}p

  ################################################################################################


  #IMAGEN DE API PRODUCCION
  api-prod:
    depends_on:
      - bdd-prod
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: VOYAGER01
    hostname: VOYAGER01
    ports:
      - "3030:3030"
    networks:
      - net-prd
    restart: always
    environment:
      DB_USER : ${DB_USER}
      DB_PASS : ${DB_PASS}
      DB_HOST : ${DB_HOST}
      DB_AUTH : ${DB_AUTH}
      DB_NAME : ${DB_NAME}
      DB_PORT : ${DB_PORT}
      API_VER : ${API_VER}
      JWT_KEY : ${JWT_KEY}
      PRIV_KEY : ${PRIV_KEY}
      PUBL_KEY : ${PUBL_KEY}



volumes:
  data_prd:
    external: true

networks:
  net-prd:
    driver: bridge